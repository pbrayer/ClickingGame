{"version":3,"sources":["components/Footer/index.js","components/Wrapper/index.js","components/Card/index.js","App.js","index.js"],"names":["Footer","react_default","a","createElement","className","Wrapper","props","Object","assign","Card","alt","name","src","image","width","height","onClick","randomizePics","id","chosen","App","state","pics","score","topScore","handleScoreChange","_this","setState","handleTopScoreChange","includes","alert","push","shuffle","console","log","i","this","length","j","Math","floor","random","_ref","_this2","components_Wrapper","map","pic","components_Card","components_Footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"g/BAWeA,MARf,WACE,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,6CCCSE,MAJf,SAAiBC,GACf,OAAOL,EAAAC,EAAAC,cAAA,OAAAI,OAAAC,OAAA,CAAMJ,UAAU,WAAcE,kBCUxBG,MAXf,SAAcH,GACZ,OACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKO,IAAKJ,EAAMK,KAAMC,IAAKN,EAAMO,MAAOC,MAAQ,MAAMC,OAAS,MAAMC,QAAS,kBAAMV,EAAMW,cAAcX,EAAMY,KAAKd,UAAU,aCAjIe,EAAS,GA2EEC,6MAvEbC,MAAQ,CACNC,OACAC,MAAO,EACPC,SAAU,KAGZC,kBAAoB,WAElBC,EAAKC,SAAS,CAAEJ,MAAOG,EAAKL,MAAME,MAAQ,OAG5CK,qBAAuB,WAClBF,EAAKL,MAAME,OAASG,EAAKL,MAAMG,UAChCE,EAAKC,SAAS,CAACH,SAAUE,EAAKL,MAAME,WAYxCN,cAAgB,SAAAC,GAEdC,EAAOU,SAASX,IAChBY,MAAM,aACNX,EAAS,GACTO,EAAKC,SAAS,CACZJ,MAAO,IAETG,EAAKE,yBAGLT,EAAOY,KAAKb,GACZQ,EAAKD,qBAGL,IAAMH,EAAOI,EAAKM,QAAQN,EAAKL,MAAMC,MACrCW,QAAQC,IAAIZ,GAGZI,EAAKC,SAAS,CAAEL,iFA3BVpB,GACN,IAAK,IAAIiC,EAAIC,KAAKf,MAAMC,KAAKe,OAAS,EAAGF,EAAI,EAAGA,IAAK,CACjD,IAAMG,EAAIC,KAAKC,MAAMD,KAAKE,UAAYN,EAAI,IADOO,EAElC,CAACxC,EAAEoC,GAAIpC,EAAEiC,IAAvBjC,EAAEiC,GAF8CO,EAAA,GAE1CxC,EAAEoC,GAFwCI,EAAA,GAIrD,OAAOxC,mCAyBF,IAAAyC,EAAAP,KACP,OACInC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACjBH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,oBAAYiC,KAAKf,MAAME,MAAvB,iBAA4Ca,KAAKf,MAAMG,WAEvDvB,EAAAC,EAAAC,cAACyC,EAAD,KACCR,KAAKf,MAAMC,KAAKuB,IAAI,SAAAC,GAAG,OACtB7C,EAAAC,EAAAC,cAAC4C,EAAD,CACE9B,cAAe0B,EAAK1B,cACpBC,GAAI4B,EAAI5B,GACRL,MAAOiC,EAAIjC,WAIfZ,EAAAC,EAAAC,cAAC6C,EAAD,cAnEUC,mBCHlBC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.400ea3c3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>Best Clicky Game 2019</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n  return (\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} width = \"200\" height = \"200\" onClick={() => props.randomizePics(props.id)} className=\"remove\" />\n      </div>\n      // {/* <span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n      //   ùòÖ\n      // </span> */}\n  );\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport Footer from \"./components/Footer\";\nimport Wrapper from \"./components/Wrapper\";\nimport pics from \"./pics.json\";\nimport Card from \"./components/Card\";\n\nlet chosen = [] //Kind of cheating by using this array\n\nclass App extends Component {\n  // Setting this.state.pics to the pics json array, score and topScore to 0\n  state = {\n    pics,\n    score: 0,\n    topScore: 0,\n  };\n\n  handleScoreChange = () => {\n    // Increments score\n    this.setState({ score: this.state.score + 1})\n  };\n\n  handleTopScoreChange = () => { //Checks at end of game to see if score > topScore\n    if(this.state.score >= this.state.topScore){\n      this.setState({topScore: this.state.score})\n    }\n  }\n\n  shuffle(a) { //I found this on Stack Overflow, what a fantastic site! :D es6 too...\n    for (let i = this.state.pics.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n}\n\n  randomizePics = id => {\n\nif (chosen.includes(id)){ //If statement here handles all the logic of the game\n    alert(\"You lose!\")\n    chosen = []\n    this.setState({\n      score: 0\n    })\n    this.handleTopScoreChange()\n}\nelse{\n    chosen.push(id)\n    this.handleScoreChange()\n}\n\n    const pics = this.shuffle(this.state.pics)\n    console.log(pics)\n    \n    // Set this.state.friends equal to the new friends array\n    this.setState({ pics });\n  };\n\nrender() { //Probably more HTML than I need here but still getting used to components\n  return (\n      <div className = \"container\"> \n        <div className = \"jumbotron\">\n        <h1>Best Clicky Game 2019</h1>\n        <hr></hr>\n        <h4>Click on an image below to get started</h4>\n        <h4>Score: {this.state.score} | Top Score: {this.state.topScore}</h4>\n        </div>\n        <Wrapper>\n        {this.state.pics.map(pic => ( //Similar function to what we had used from class\n          <Card\n            randomizePics={this.randomizePics}\n            id={pic.id}\n            image={pic.image}\n          />\n        ))}\n        </Wrapper>\n        <Footer />\n      </div>\n  );\n}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}